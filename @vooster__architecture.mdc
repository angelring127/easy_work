# Workeasy – Architecture Document

## 최근 업데이트 (2024-12-03)

### 매장 사용자 관리 기능 개선

#### 1. 서브 매니저 회수 기능 개선

- **기존**: 서브 매니저 → 비활성화
- **개선**: 서브 매니저 → 파트타이머로 전환
- **API**: `POST /api/stores/[id]/users/demote`
- **함수**: `demote_sub_manager_to_part_timer()`

#### 2. 사용자 비활성화 기능 추가

- **기능**: 사용자를 비활성화하여 매장에서 일시적으로 제외
- **API**: `POST /api/stores/[id]/users/deactivate`
- **함수**: `deactivate_user()`
- **재활성화**: `POST /api/stores/[id]/users/reactivate`
- **함수**: `reactivate_user()`

#### 3. 사용자 삭제 기능 추가

- **기능**: 사용자를 소프트 삭제 (스케줄 이력 보존)
- **API**: `POST /api/stores/[id]/users/delete`
- **함수**: `soft_delete_user()`
- **특징**: `deleted_at` 컬럼으로 소프트 삭제 구현

#### 4. 데이터베이스 스키마 변경

- `user_store_roles` 테이블에 `deleted_at` 컬럼 추가
- 소프트 삭제를 위한 인덱스 생성
- RLS 정책 업데이트 (삭제된 사용자 제외)

#### 5. UI 개선

- 서브 매니저 전환 버튼
- 사용자 비활성화/재활성화 버튼
- 사용자 삭제 버튼
- 확인 다이얼로그 추가

#### 6. 다국어 지원

- 새로운 기능에 대한 한국어/영어/일본어 번역 추가
- 확인 메시지 및 오류 메시지 다국어화

#### 7. 문제 해결 (2024-12-03)

- **상단 네비게이션 바 누락**: 사용자 관리 페이지에 대시보드와 동일한 헤더 추가
- **초대 탭 번역 키 표시**: 초대 관련 번역 키 추가 (한국어/영어/일본어)
- **권한 문제**: SUB_MANAGER에 MANAGE_USER_ROLES 권한 추가하여 사용자 관리 접근 가능하도록 수정

#### 8. 추가 문제 해결 (2024-12-03)

- **매장 관리 페이지 상단 네비게이션 바**: 대시보드와 동일한 헤더 구조로 통일
- **사용자 관리 페이지 뒤로가기 버튼**: 매장 관리 페이지로 돌아가는 뒤로가기 버튼 추가
- **일관된 UI/UX**: 모든 페이지에서 동일한 네비게이션 경험 제공

#### 9. 추가 문제 해결 (2024-12-03)

- **사용자 관리 뒤로가기 버튼 수정**: 매장 상세 정보 대신 대시보드로 이동하도록 수정
- **매장 관리 리스트 페이지 상단 네비게이션 바**: 대시보드와 동일한 헤더 구조로 통일
- **네비게이션 일관성**: 모든 페이지에서 일관된 사용자 경험 제공

#### 10. 사용자 관리 UI 개선 (2024-12-03)

- **삭제된 사용자 시각적 구분**: 삭제된 사용자의 배경을 회색으로 표시하고 투명도 적용
- **삭제된 사용자 버튼 비활성화**: 모든 액션 버튼을 disabled로 설정하여 조작 방지
- **삭제 상태 표시**: 삭제된 사용자의 상태를 "삭제됨"으로 표시
- **사용자 경험 개선**: 삭제된 사용자를 명확하게 구분하여 혼란 방지

#### 11. 사용자 관리 추가 개선 (2024-12-03)

- **삭제된 사용자 상태 배지 수정**: 삭제된 사용자의 상태 배지를 회색으로 표시
- **중복 삭제 방지**: 이미 삭제된 사용자에 대한 삭제 버튼 클릭 시 경고 메시지 표시
- **다국어 지원**: 삭제 관련 메시지에 한국어/영어/일본어 번역 추가
- **데이터 무결성**: 삭제된 사용자에 대한 실수 방지 및 명확한 피드백 제공

#### 12. 런타임 오류 수정 (2024-12-03)

- **null 참조 오류 수정**: user 객체가 null일 때 email 속성 접근 오류 해결
- **조건부 렌더링 개선**: user 객체 존재 여부를 확인하는 안전한 접근 방식 적용
- **로딩 상태 관리**: isLoading 변수명 충돌 해결 및 일관된 로딩 상태 관리
- **안정성 향상**: 런타임 오류 방지를 통한 사용자 경험 개선

#### 13. 초대 시스템 개선 (2024-12-03)

- **중복 사용자 생성 문제 해결**: createUser() 제거하고 inviteUserByEmail()만 사용
- **이메일 발송 로직 단순화**: 기존/신규 사용자 구분 없이 통합된 이메일 발송
- **오류 처리 개선**: 중복 생성으로 인한 "이미 등록된 이메일" 오류 방지
- **코드 구조 개선**: 불필요한 복잡성 제거 및 단순한 초대 플로우 구현

#### 14. 초대 토큰 처리 개선 (2024-12-03)

- **토큰 추출 로직 개선**: URL 파라미터와 사용자 메타데이터에서 토큰을 모두 확인
- **초대 정보 조회 수정**: undefined 토큰으로 인한 404 오류 해결
- **사용자 메타데이터 활용**: Supabase Auth에서 전달된 token_hash를 우선적으로 사용
- **디버깅 로그 추가**: 토큰 추출 과정을 추적할 수 있는 상세한 로그 구현

#### 15. 초대 페이지 접근 문제 해결 (2024-12-03)

- **미들웨어 수정**: /invites/verify-email을 공개 경로로 추가하여 인증 없이 접근 가능
- **디버깅 로그 강화**: verify-email 페이지 로드 과정을 상세히 추적할 수 있는 로그 추가
- **페이지 접근성 개선**: 초대 링크로 접속 시 verify-email 페이지가 정상적으로 로드되도록 수정
- **문제 진단 강화**: URL, 해시, 파라미터 등 모든 관련 정보를 로깅하여 문제 원인 파악

#### 16. 초대 수락 후 매장 목록 동기화 개선 (2024-12-03)

- **매장 목록 새로고침 강화**: 초대 수락 후 즉시 매장 목록을 새로고침하여 대시보드에 반영
- **대시보드 자동 새로고침**: 사용자 변경 시 자동으로 매장 목록을 새로고침하는 로직 추가
- **StoreContext 로깅 강화**: 매장 목록 로드 과정을 상세히 추적할 수 있는 로그 추가
- **사용자 경험 개선**: 새로고침 없이도 초대된 매장이 즉시 대시보드에 표시되도록 수정

#### 17. 초대 상태 동기화 및 권한 기반 UI 개선 (2024-12-03)

- **초대 상태 실시간 업데이트**: 초대 수락 후 초대 목록 캐시 무효화 및 자동 새로고침 구현
- **권한 기반 대시보드 UI**: 파트타이머 권한에 맞게 사용자관리 카드 조건부 표시
- **초대 목록 자동 새로고침**: 5초마다 자동 새로고침 및 윈도우 포커스 시 새로고침
- **사용자 경험 최적화**: 권한에 맞는 UI만 표시하여 혼란 방지 및 직관적인 인터페이스 제공

#### 18. 삭제된 사용자 상태 표시 개선 (2024-12-03)

- **삭제된 사용자 정보 포함**: API에서 deleted_at 필드를 포함하여 삭제 상태 반영
- **상태 필터 개선**: "삭제됨" 상태 필터 옵션 추가로 삭제된 사용자 별도 관리
- **UI 상태 표시 수정**: 삭제된 사용자의 상태를 "삭제됨"으로 올바르게 표시
- **필터링 로직 강화**: 삭제된 사용자와 일반 사용자를 구분하여 필터링하는 로직 구현

#### 19. 마스터 사용자 보호 및 초대 기능 개선 (2024-12-03)

- **마스터 사용자 삭제 방지**: 마스터 권한을 가진 사용자는 삭제할 수 없도록 API 및 UI에서 제한
- **초대 시 이름 입력 추가**: 초대 폼에 이름 입력 필드를 추가하여 사용자 정보 완성도 향상
- **초대 이메일 메타데이터 개선**: 초대 시 입력한 이름을 이메일 메타데이터에 포함
- **사용자 경험 개선**: 마스터 사용자 삭제 버튼 비활성화 및 툴팁으로 안내

#### 20. 초대 승락 후 데이터 동기화 개선 (2024-12-03)

- **강력한 캐시 무효화**: 초대 승락 후 사용자 목록과 초대 목록을 즉시 새로고침
- **URL 설정 통일**: 첫 초대와 재전송의 redirectTo URL을 환경변수로 통일
- **자동 새로고침 강화**: 초대 관리와 사용자 관리 페이지에서 3초마다 자동 새로고침
- **서버 상태 동기화**: 초대 승락 후 1초 대기하여 서버 상태 완전 동기화

#### 21. 초대 상태 업데이트 강화 (2024-12-03)

- **상세한 로깅**: 초대 수락 API에서 상태 업데이트 과정을 상세히 로깅
- **다중 캐시 무효화**: 초대 수락 후 3회 반복 캐시 무효화로 확실한 상태 동기화
- **즉시 상태 확인**: 초대 수락 후 즉시 초대 목록을 조회하여 상태 확인
- **자동 새로고침 최적화**: 초대 관리 페이지에서 2초마다 자동 새로고침으로 빠른 업데이트

#### 22. 초대 목록 조회 통합 (2024-12-03)

- **이중 테이블 조회**: invitations 테이블과 invites 테이블을 모두 조회하여 완전한 초대 목록 제공
- **RPC 함수 추가**: get_invites_by_store 함수로 invites 테이블 안전한 조회
- **상태 필터링 개선**: 두 테이블의 데이터에 대해 통합된 상태 필터링 적용
- **데이터 형식 통일**: invites 테이블 데이터를 invitations 형식으로 변환하여 일관성 확보

#### 23. 초대 상태 디버깅 강화 (2024-12-03)

- **상세한 로깅**: 초대 수락 과정의 각 단계를 상세히 로깅하여 문제 추적
- **테스트 API 추가**: /api/test/invitation-status로 초대 상태 즉시 확인
- **이중 테이블 조회**: invitations와 invites 테이블을 모두 조회하여 상태 불일치 해결
- **실시간 상태 확인**: 초대 수락 후 즉시 두 테이블의 상태를 확인하여 동기화 검증

#### 24. 초대 상태 필터링 및 표시 개선 (2024-12-03)

- **상태 필터링 로깅**: 초대 목록 조회 시 필터링 과정을 상세히 로깅
- **프론트엔드 디버깅**: 초대 관리자 컴포넌트에서 각 초대의 상태 표시 과정 로깅
- **디버깅 페이지 추가**: /debug/invitation-status 페이지로 초대 상태 수동 확인
- **상태 매핑 검증**: invitations와 invites 테이블 간의 상태 매핑 로직 검증

#### 25. 빌드 오류 수정 (2024-12-03)

- **JSX 구문 오류 수정**: invitation-manager.tsx에서 map 함수의 닫는 괄호 누락 수정
- **문법 오류 해결**: TableBody 내부의 JSX 구조 정상화
- **빌드 안정성 확보**: Next.js 빌드 오류 해결로 개발 환경 안정화

#### 26. 초대 테이블 구조 불일치 해결 (2024-12-03)

- **컬럼 구조 수정**: invites 테이블의 created_at → invited_at 컬럼명 수정
- **테이블 조회 오류 해결**: invites 테이블 조회 시 올바른 컬럼명 사용
- **상태 업데이트 검증**: 초대 수락 후 즉시 테이블 상태 재확인 로직 추가
- **데이터 변환 개선**: invites 테이블 데이터를 invitations 형식으로 변환 시 올바른 컬럼 매핑

#### 27. 초대 상태 업데이트 조건 수정 (2024-12-03)

- **테이블 구분 로직 개선**: invitations와 invites 테이블 구분 조건 수정
- **토큰 필드 검증**: token 필드 존재 여부를 확인하여 올바른 테이블 선택
- **상세한 디버깅**: 초대 정보 조회 시 테이블 구분 정보를 상세히 로깅
- **상태 업데이트 정확성**: 올바른 테이블에서 상태 업데이트가 실행되도록 보장

#### 28. 초대 수락 API 디버깅 강화 (2024-12-03)

- **API 호출 추적**: 초대 수락 API의 시작과 완료를 명확히 로깅
- **요청/응답 로깅**: 초대 수락 API 호출과 응답을 상세히 추적
- **수동 상태 업데이트**: /api/test/update-invitation-status로 수동 상태 업데이트 가능
- **타임스탬프 추가**: 모든 로그에 타임스탬프를 추가하여 시간 순서 추적

#### 29. 초대 권한 문제 해결 (2024-12-03)

- **403 오류 분석**: 초대 수락 후 PART_TIMER 권한으로 인한 초대 목록 조회 실패
- **권한 확인 로깅**: 초대 목록 조회 API에서 권한 확인 과정을 상세히 로깅
- **상태 확인 방법 변경**: 권한 문제가 없는 테스트 API로 초대 상태 확인
- **역할 기반 접근 제어**: MASTER/SUB_MANAGER만 초대 목록 조회 가능하도록 제한

#### 30. 초대 수락 RLS 문제 해결 (2024-12-03)

- **RLS 정책 문제**: invitations 테이블 UPDATE 정책이 MASTER/SUB_MANAGER만 허용
- **RPC 함수 생성**: accept_invitation() 함수로 RLS 우회하여 초대 상태 업데이트
- **상세한 로깅**: 업데이트 전후 상태 확인 및 RPC 함수 결과 로깅
- **SECURITY DEFINER**: RPC 함수가 RLS 정책을 우회하여 초대 수락 가능

---

## 기존 아키텍처 내용

### 1. 시스템 개요

Workeasy는 Next.js 기반의 PWA를 사용하여 소규모 카페 및 음식점의 교대 근무표 자동 생성 및 관리, 실시간 팀 커뮤니케이션을 지원하는 SaaS 솔루션입니다.

### 2. 기술 스택

- **Frontend**: Next.js 15, TypeScript, TailwindCSS, shadcn/ui
- **Backend**: Supabase (PostgreSQL, Auth, Realtime)
- **State Management**: @tanstack/react-query, zustand
- **Internationalization**: 커스텀 i18n 시스템

### 3. 핵심 기능

- 사용자 인증 및 권한 관리 (RBAC)
- 매장 관리 및 사용자 초대
- 스케줄 자동 생성 및 관리
- 실시간 채팅 및 알림
- 다국어 지원 (한국어/영어/일본어)

### 4. 데이터베이스 설계

- **stores**: 매장 정보
- **user_store_roles**: 사용자-매장-역할 관계
- **invitations**: 초대 시스템
- **temporary_assignments**: 임시 근무 배치
- **audit_logs**: 감사 로그

### 5. 보안

- Row Level Security (RLS) 정책
- JWT 기반 인증
- 권한 기반 접근 제어
- 감사 로그 시스템

### 6. 성능 최적화

- 서버 사이드 렌더링 (SSR)
- 데이터 캐싱 (@tanstack/react-query)
- 이미지 최적화
- 코드 분할

### 7. 배포 및 운영

- Vercel 배포
- Supabase 호스팅
- 환경별 설정 관리
- 모니터링 및 로깅
